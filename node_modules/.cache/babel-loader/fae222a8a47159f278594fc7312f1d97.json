{"ast":null,"code":"import _regeneratorRuntime from \"/home/alex/react_projects/myCompany/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(registerSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(loginSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(logoutSaga),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(forgotPasswordSaga);\n\nimport { put, call } from 'redux-saga/effects';\nimport { registerUserService, loginUserService, logoutUserService, forgotPasswordService } from '../services/authenticationService';\nimport * as types from '../actions';\nexport function registerSaga(payload) {\n  var response;\n  return _regeneratorRuntime.wrap(function registerSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(registerUserService, payload);\n\n        case 3:\n          response = _context.sent;\n          _context.next = 6;\n          return [put({\n            type: types.REGISTER_USER_SUCCESS,\n            response: response\n          })];\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put({\n            type: types.REGISTER_USER_ERROR,\n            error: _context.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\nexport function loginSaga(payload) {\n  var response;\n  return _regeneratorRuntime.wrap(function loginSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(loginUserService, payload);\n\n        case 3:\n          response = _context2.sent;\n          _context2.next = 6;\n          return [put({\n            type: types.LOGIN_USER_SUCCESS,\n            response: response\n          })];\n\n        case 6:\n          _context2.next = 12;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 12;\n          return put({\n            type: types.LOGIN_USER_ERROR,\n            error: _context2.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}\nexport function logoutSaga(payload) {\n  var response;\n  return _regeneratorRuntime.wrap(function logoutSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(logoutUserService, payload);\n\n        case 3:\n          response = _context3.sent;\n          _context3.next = 6;\n          return [put({\n            type: types.LOGOUT_USER_SUCCESS,\n            response: response\n          })];\n\n        case 6:\n          _context3.next = 12;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 12;\n          return put({\n            type: types.LOGOUT_USER_ERROR,\n            error: _context3.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\nexport function forgotPasswordSaga(payload) {\n  var response;\n  return _regeneratorRuntime.wrap(function forgotPasswordSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(forgotPasswordService, payload);\n\n        case 3:\n          response = _context4.sent;\n          _context4.next = 6;\n          return [put({\n            type: types.FORGOT_PASSWORD_SUCCESS,\n            response: response\n          })];\n\n        case 6:\n          _context4.next = 12;\n          break;\n\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 12;\n          return put({\n            type: types.FORGOT_PASSWORD_ERROR,\n            error: _context4.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 8]]);\n}","map":{"version":3,"sources":["/home/alex/react_projects/myCompany/src/sagas/authenticationSaga.js"],"names":["registerSaga","loginSaga","logoutSaga","forgotPasswordSaga","put","call","registerUserService","loginUserService","logoutUserService","forgotPasswordService","types","payload","response","type","REGISTER_USER_SUCCESS","REGISTER_USER_ERROR","error","LOGIN_USER_SUCCESS","LOGIN_USER_ERROR","LOGOUT_USER_SUCCESS","LOGOUT_USER_ERROR","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_ERROR"],"mappings":";;oDAUiBA,Y;qDAWAC,S;qDAWAC,U;qDAWAC,kB;;AA3CjB,SAASC,GAAT,EAAcC,IAAd,QAA0B,oBAA1B;AACA,SACEC,mBADF,EAEEC,gBAFF,EAGEC,iBAHF,EAIEC,qBAJF,QAKO,mCALP;AAOA,OAAO,KAAKC,KAAZ,MAAuB,YAAvB;AAEA,OAAO,SAAUV,YAAV,CAAuBW,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEc,iBAAMN,IAAI,CAACC,mBAAD,EAAsBK,OAAtB,CAAV;;AAFd;AAEGC,UAAAA,QAFH;AAAA;AAGH,iBAAM,CACJR,GAAG,CAAC;AAAES,YAAAA,IAAI,EAAEH,KAAK,CAACI,qBAAd;AAAqCF,YAAAA,QAAQ,EAARA;AAArC,WAAD,CADC,CAAN;;AAHG;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOH,iBAAMR,GAAG,CAAC;AAAES,YAAAA,IAAI,EAAEH,KAAK,CAACK,mBAAd;AAAmCC,YAAAA,KAAK;AAAxC,WAAD,CAAT;;AAPG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWP,OAAO,SAAUf,SAAV,CAAoBU,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEc,iBAAMN,IAAI,CAACE,gBAAD,EAAmBI,OAAnB,CAAV;;AAFd;AAEGC,UAAAA,QAFH;AAAA;AAGH,iBAAM,CACJR,GAAG,CAAC;AAAES,YAAAA,IAAI,EAAEH,KAAK,CAACO,kBAAd;AAAkCL,YAAAA,QAAQ,EAARA;AAAlC,WAAD,CADC,CAAN;;AAHG;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOH,iBAAMR,GAAG,CAAC;AAAES,YAAAA,IAAI,EAAEH,KAAK,CAACQ,gBAAd;AAAgCF,YAAAA,KAAK;AAArC,WAAD,CAAT;;AAPG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWP,OAAO,SAAUd,UAAV,CAAqBS,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEc,iBAAMN,IAAI,CAACG,iBAAD,EAAoBG,OAApB,CAAV;;AAFd;AAEGC,UAAAA,QAFH;AAAA;AAGH,iBAAM,CACJR,GAAG,CAAC;AAAES,YAAAA,IAAI,EAAEH,KAAK,CAACS,mBAAd;AAAmCP,YAAAA,QAAQ,EAARA;AAAnC,WAAD,CADC,CAAN;;AAHG;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOH,iBAAMR,GAAG,CAAC;AAAES,YAAAA,IAAI,EAAEH,KAAK,CAACU,iBAAd;AAAiCJ,YAAAA,KAAK;AAAtC,WAAD,CAAT;;AAPG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWP,OAAO,SAAUb,kBAAV,CAA6BQ,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEc,iBAAMN,IAAI,CAACI,qBAAD,EAAwBE,OAAxB,CAAV;;AAFd;AAEGC,UAAAA,QAFH;AAAA;AAGH,iBAAM,CACJR,GAAG,CAAC;AAAES,YAAAA,IAAI,EAAEH,KAAK,CAACW,uBAAd;AAAuCT,YAAAA,QAAQ,EAARA;AAAvC,WAAD,CADC,CAAN;;AAHG;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOH,iBAAMR,GAAG,CAAC;AAAES,YAAAA,IAAI,EAAEH,KAAK,CAACY,qBAAd;AAAqCN,YAAAA,KAAK;AAA1C,WAAD,CAAT;;AAPG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { put, call } from 'redux-saga/effects';\nimport {\n  registerUserService,\n  loginUserService,\n  logoutUserService,\n  forgotPasswordService\n} from '../services/authenticationService';\n\nimport * as types from '../actions'\n\nexport function* registerSaga(payload) {\n  try {\n    const response = yield call(registerUserService, payload);\n    yield [\n      put({ type: types.REGISTER_USER_SUCCESS, response })\n    ];\n  } catch(error) {\n    yield put({ type: types.REGISTER_USER_ERROR, error });\n  }\n}\n\nexport function* loginSaga(payload) {\n  try {\n    const response = yield call(loginUserService, payload);\n    yield [\n      put({ type: types.LOGIN_USER_SUCCESS, response })\n    ];\n  } catch(error) {\n    yield put({ type: types.LOGIN_USER_ERROR, error });\n  }\n}\n\nexport function* logoutSaga(payload) {\n  try {\n    const response = yield call(logoutUserService, payload);\n    yield [\n      put({ type: types.LOGOUT_USER_SUCCESS, response })\n    ];\n  } catch(error) {\n    yield put({ type: types.LOGOUT_USER_ERROR, error });\n  }\n}\n\nexport function* forgotPasswordSaga(payload) {\n  try {\n    const response = yield call(forgotPasswordService, payload);\n    yield [\n      put({ type: types.FORGOT_PASSWORD_SUCCESS, response })\n    ];\n  } catch(error) {\n    yield put({ type: types.FORGOT_PASSWORD_ERROR, error });\n  }\n}"]},"metadata":{},"sourceType":"module"}