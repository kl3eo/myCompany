{"ast":null,"code":"import { baseurl } from '../utils/baseurl';\nexport var registerUserService = function registerUserService(request) {\n  var REGISTER_ENDPOINT = baseurl('register');\n  var parameters = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(request.user)\n  };\n  return fetch(REGISTER_ENDPOINT, parameters).then(function (response) {\n    return response.json();\n  }).then(function (json) {\n    return json;\n  });\n};\nexport var loginUserService = function loginUserService(request) {\n  var LOGIN_ENDPOINT = baseurl('login');\n  var parameters = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(request.user)\n  };\n  return fetch(LOGIN_ENDPOINT, parameters).then(function (response) {\n    return response.json();\n  }).then(function (json) {\n    return json;\n  }).catch(function (error) {\n    return error;\n  });\n};\nexport var logoutUserService = function logoutUserService(request) {\n  var LOGOUT_ENDPOINT = baseurl('logout');\n  var parameters = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(request.user)\n  };\n  return fetch(LOGOUT_ENDPOINT, parameters).then(function (response) {\n    return response.json();\n  }).then(function (json) {\n    return json;\n  }).catch(function (error) {\n    return error;\n  });\n};\nexport var forgotPasswordService = function forgotPasswordService(request) {\n  var FORGOT_ENDPOINT = baseurl('forgot');\n  var parameters = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(request.email)\n  };\n  return fetch(FORGOT_ENDPOINT, parameters).then(function (response) {\n    return response.json();\n  }).then(function (json) {\n    return json;\n  }).catch(function (error) {\n    return error;\n  });\n};","map":{"version":3,"sources":["/home/alex/react_projects/myCompany/src/services/authenticationService.js"],"names":["baseurl","registerUserService","request","REGISTER_ENDPOINT","parameters","method","headers","body","JSON","stringify","user","fetch","then","response","json","loginUserService","LOGIN_ENDPOINT","catch","error","logoutUserService","LOGOUT_ENDPOINT","forgotPasswordService","FORGOT_ENDPOINT","email"],"mappings":"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","sourcesContent":["import { baseurl } from '../utils/baseurl';\n\nexport const registerUserService = (request) => {\n  const REGISTER_ENDPOINT = baseurl('register');\n  \n  const parameters = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(request.user)\n  };\n\n  return fetch(REGISTER_ENDPOINT, parameters)\n    .then(response => {\n      return response.json();\n    })\n    .then(json => {\n      return json;\n    });\n};\n\nexport const loginUserService = (request) => {\n  const LOGIN_ENDPOINT = baseurl('login');\n\n  const parameters = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(request.user)\n  };\n\n  return fetch(LOGIN_ENDPOINT, parameters)\n    .then(response => {\n      return response.json();\n    })\n    .then(json => {\n      return json;\n    }).catch(error => {\n      return error;\n    });\n};\n\nexport const logoutUserService = (request) => {\n  const LOGOUT_ENDPOINT = baseurl('logout');\n\n  const parameters = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(request.user)\n  };\n\n  return fetch(LOGOUT_ENDPOINT, parameters)\n    .then(response => {\n      return response.json();\n    })\n    .then(json => {\n      return json;\n    })\n    .catch(error => {\n      return error;\n    });\n};\n\nexport const forgotPasswordService = (request) => {\n  const FORGOT_ENDPOINT = baseurl('forgot');\n\n  const parameters = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(request.email)\n  };\n\n  return fetch(FORGOT_ENDPOINT, parameters)\n    .then(response => {\n      return response.json();\n    })\n    .then(json => {\n      return json;\n    })\n    .catch(error => {\n      return error;\n    });\n};"]},"metadata":{},"sourceType":"module"}