{"ast":null,"code":"import _defineProperty from \"/home/alex/react_projects/myCompany/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/alex/react_projects/myCompany/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/alex/react_projects/myCompany/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/alex/react_projects/myCompany/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"/home/alex/react_projects/myCompany/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _taggedTemplateLiteral from \"/home/alex/react_projects/myCompany/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/alex/react_projects/myCompany/src/components/admin/list/Tableau.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 1rem;\\n  text-align:center;\\n\\n\\t\\n  table {\\n    border-spacing: 0;\\n    border: 1px solid black;\\n    margin:0 auto;\\n    min-width:93%;\\n    text-align:left;\\n\\n    tr {\\n      :last-child {\\n        td {\\n          border-bottom: 0;\\n        }\\n      }\\n    }\\n\\n    th,\\n    td {\\n      margin: 0;\\n      padding: 0.5rem;\\n      border-bottom: 1px solid black;\\n      border-right: 1px solid black;\\n\\n      :last-child {\\n        border-right: 0;\\n      }\\n    }\\n\\n    td {\\n      input {\\n        font-size: 1rem;\\n        padding: 0;\\n        margin: 0;\\n        border: 0;\\n      }\\n    }\\n  }\\n\\n  .pagination {\\n    padding: 0.5rem;\\n    float:left;\\n    margin-left:3%;\\n    margin-top:3px;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useTable, usePagination, useSortBy, useFilters, useGroupBy, useExpanded, useRowSelect } from 'react-table';\nimport matchSorter from 'match-sorter';\nimport User from './User';\nimport CustomizedDialogs from './CustomizedDialogs';\nvar Styles = styled.div(_templateObject());\n/*\nconst EditableCell = ({\n  cell: { value: initialValue },\n  row: { index },\n  column: { id },\n  updateMyData, // This is a custom function that we supplied to our table instance\n  editable,\n}) => {\n const [value, setValue] = React.useState(initialValue)\n\n  const onChange = e => {\n    setValue(e.target.value)\n  }\n\n  const onBlur = () => {\n    updateMyData(index, id, value)\n  }\n\n  React.useEffect(() => {\n    setValue(initialValue)\n  }, [initialValue])\n\n  if (!editable) {\n    return `${initialValue}`\n  }\n  //ash\n  if (value != null) {  return <input value={value} onChange={onChange} onBlur={onBlur} />};\n  if (value == null) {  return <input value=\"\" onChange={onChange} onBlur={onBlur} />};\n  \n}\n*/\n\nfunction DefaultColumnFilter(_ref) {\n  var _ref$column = _ref.column,\n      filterValue = _ref$column.filterValue,\n      preFilteredRows = _ref$column.preFilteredRows,\n      setFilter = _ref$column.setFilter;\n  var count = preFilteredRows.length;\n  return React.createElement(\"input\", {\n    value: filterValue || '',\n    onChange: function onChange(e) {\n      setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n    },\n    placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u043F\\u043E \".concat(count, \" \\u0437\\u0430\\u043F\\u0438\\u0441...\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  });\n}\n\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\n  return matchSorter(rows, filterValue, {\n    keys: [function (row) {\n      return row.values[id];\n    }]\n  });\n}\n\nfuzzyTextFilterFn.autoRemove = function (val) {\n  return !val;\n};\n\nfunction Table(_ref2) {\n  var columns = _ref2.columns,\n      data = _ref2.data,\n      updateMyData = _ref2.updateMyData,\n      skipReset = _ref2.skipReset;\n  var filterTypes = React.useMemo(function () {\n    return {\n      fuzzyText: fuzzyTextFilterFn,\n      text: function text(rows, id, filterValue) {\n        return rows.filter(function (row) {\n          var rowValue = row.values[id];\n          return rowValue !== undefined ? String(rowValue).toLowerCase().startsWith(String(filterValue).toLowerCase()) : true;\n        });\n      }\n    };\n  }, []);\n  var defaultColumn = React.useMemo(function () {\n    return {\n      Filter: DefaultColumnFilter //     Cell: EditableCell,\n\n    };\n  }, []);\n\n  var _useTable = useTable({\n    columns: columns,\n    data: data,\n    defaultColumn: defaultColumn,\n    filterTypes: filterTypes,\n    updateMyData: updateMyData,\n    autoResetPage: !skipReset,\n    autoResetSelectedRows: !skipReset,\n    initialState: {\n      pageSize: 20\n    }\n  }, useFilters, useGroupBy, useSortBy, useExpanded, usePagination, useRowSelect, function (hooks) {\n    hooks.flatColumns.push(function (columns) {\n      return [{\n        id: 'selection',\n        groupByBoundary: true,\n        Header: function Header(_ref3) {\n          var getToggleAllRowsSelectedProps = _ref3.getToggleAllRowsSelectedProps;\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198\n            },\n            __self: this\n          }, React.createElement(IndeterminateCheckbox, Object.assign({}, getToggleAllRowsSelectedProps(), {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 199\n            },\n            __self: this\n          })));\n        },\n        Cell: function Cell(_ref4) {\n          var row = _ref4.row;\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 203\n            },\n            __self: this\n          }, React.createElement(IndeterminateCheckbox, Object.assign({}, row.getToggleRowSelectedProps(), {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 204\n            },\n            __self: this\n          })));\n        }\n      }].concat(_toConsumableArray(columns));\n    });\n  }),\n      getTableProps = _useTable.getTableProps,\n      getTableBodyProps = _useTable.getTableBodyProps,\n      headerGroups = _useTable.headerGroups,\n      prepareRow = _useTable.prepareRow,\n      page = _useTable.page,\n      canPreviousPage = _useTable.canPreviousPage,\n      canNextPage = _useTable.canNextPage,\n      pageOptions = _useTable.pageOptions,\n      pageCount = _useTable.pageCount,\n      gotoPage = _useTable.gotoPage,\n      nextPage = _useTable.nextPage,\n      previousPage = _useTable.previousPage,\n      setPageSize = _useTable.setPageSize,\n      _useTable$state = _useTable.state,\n      pageIndex = _useTable$state.pageIndex,\n      pageSize = _useTable$state.pageSize,\n      groupBy = _useTable$state.groupBy,\n      expanded = _useTable$state.expanded,\n      filters = _useTable$state.filters,\n      selectedRowIds = _useTable$state.selectedRowIds;\n\n  return React.createElement(React.Fragment, null, React.createElement(\"table\", Object.assign({}, getTableProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }), React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, headerGroups.map(function (headerGroup) {\n    return React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), headerGroup.headers.map(function (column) {\n      return React.createElement(\"th\", Object.assign({}, column.getHeaderProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, column.canGroupBy ? // If the column can be grouped, let's add a toggle\n      React.createElement(\"span\", Object.assign({}, column.getGroupByToggleProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }), column.isGrouped ? '🛑 ' : '👊 ') : null, React.createElement(\"span\", Object.assign({}, column.getSortByToggleProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }), column.render('Header'), column.isSorted ? column.isSortedDesc ? ' 🔽' : ' 🔼' : '')), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, column.canFilter ? column.render('Filter') : null));\n    }));\n  })), React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }), page.map(function (row) {\n    prepareRow(row); //console.log(row);\n\n    return React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }), row.cells.map(function (cell) {\n      return React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }), cell.isGrouped ? // If it's a grouped cell, add an expander and row count\n      React.createElement(React.Fragment, null, React.createElement(\"span\", Object.assign({}, row.getExpandedToggleProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }), row.isExpanded ? '👇' : '👉'), ' ', cell.render('Cell', {\n        editable: false\n      }), \" (\", row.subRows.length, \")\") : cell.isAggregated ? // If the cell is aggregated, use the Aggregated\n      // renderer for cell\n      cell.render('Aggregated') : cell.isRepeatedValue ? null : // For cells with repeated values, render null\n      // Otherwise, just render the regular cell\n      cell.render('Cell', {\n        editable: true\n      }));\n    }));\n  }))), React.createElement(\"div\", {\n    className: \"pagination\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: function onClick() {\n      return gotoPage(0);\n    },\n    disabled: !canPreviousPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }, '<<'), ' ', React.createElement(\"button\", {\n    onClick: function onClick() {\n      return previousPage();\n    },\n    disabled: !canPreviousPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }, '<'), ' ', React.createElement(\"button\", {\n    onClick: function onClick() {\n      return nextPage();\n    },\n    disabled: !canNextPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }, '>'), ' ', React.createElement(\"button\", {\n    onClick: function onClick() {\n      return gotoPage(pageCount - 1);\n    },\n    disabled: !canNextPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }, '>>'), ' ', React.createElement(\"span\", {\n    style: {\n      margin: '5px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }, \" \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430\", ' ', React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }, pageIndex + 1, \" \\u0438\\u0437 \", pageOptions.length), ' ', \" \"), React.createElement(\"span\", {\n    style: {\n      margin: '5px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }, \" | \\u043F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043D\\u0430:\", ' ', React.createElement(\"input\", {\n    type: \"number\",\n    defaultValue: pageIndex + 1,\n    onChange: function onChange(e) {\n      var page = e.target.value ? Number(e.target.value) - 1 : 0;\n      gotoPage(page);\n    },\n    style: {\n      width: '100px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  })), ' ', React.createElement(\"select\", {\n    value: pageSize,\n    onChange: function onChange(e) {\n      setPageSize(Number(e.target.value));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305\n    },\n    __self: this\n  }, [10, 20, 30, 40, 50].map(function (pageSize) {\n    return React.createElement(\"option\", {\n      key: pageSize,\n      value: pageSize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, pageSize);\n  }))), React.createElement(\"div\", {\n    style: {\n      display: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  }, React.createElement(\"pre\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319\n    },\n    __self: this\n  }, React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  }, JSON.stringify({\n    pageIndex: pageIndex,\n    pageSize: pageSize,\n    pageCount: pageCount,\n    canNextPage: canNextPage,\n    canPreviousPage: canPreviousPage,\n    groupBy: groupBy,\n    expanded: expanded,\n    filters: filters,\n    selectedRowIds: selectedRowIds\n  }, null, 2)))));\n}\n\nfunction filterGreaterThan(rows, id, filterValue) {\n  return rows.filter(function (row) {\n    var rowValue = row.values[id];\n    return rowValue >= filterValue;\n  });\n}\n\nfilterGreaterThan.autoRemove = function (val) {\n  return typeof val !== 'number';\n};\n\nvar IndeterminateCheckbox = React.forwardRef(function (_ref5, ref) {\n  var indeterminate = _ref5.indeterminate,\n      rest = _objectWithoutProperties(_ref5, [\"indeterminate\"]);\n\n  var defaultRef = React.useRef();\n  var resolvedRef = ref || defaultRef;\n  React.useEffect(function () {\n    resolvedRef.current.indeterminate = indeterminate;\n  }, [resolvedRef, indeterminate]);\n  return React.createElement(React.Fragment, null, React.createElement(\"input\", Object.assign({\n    type: \"checkbox\",\n    ref: resolvedRef\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364\n    },\n    __self: this\n  })));\n});\n\nfunction Tableau(props) {\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      data = _React$useState2[0],\n      setData = _React$useState2[1];\n\n  var _React$useState3 = React.useState('...Loading...'),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      message = _React$useState4[0],\n      setMessage = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      open = _React$useState6[0],\n      setOpen = _React$useState6[1];\n\n  var callbackFunction = function callbackFunction(childData) {\n    setMessage(childData);\n  };\n\n  var onUserClick = function onUserClick() {\n    setMessage('');\n    setOpen(true);\n  };\n\n  var columns = React.useMemo(function () {\n    return [{\n      Header: 'Список работников',\n      columns: [{\n        Header: 'Ф.И.О',\n        accessor: 'name',\n        Cell: function Cell(_ref6) {\n          var _ref6$cell = _ref6.cell,\n              row = _ref6$cell.row,\n              original = _ref6$cell.original;\n          return React.createElement(\"div\", {\n            onClick: onUserClick,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 395\n            },\n            __self: this\n          }, React.createElement(User, {\n            username: typeof row.original === 'undefined' ? row.subRows[0].original.name : row.original.name,\n            id: typeof row.original === 'undefined' ? row.subRows[0].original._id : row.original._id,\n            parentCallback: callbackFunction,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 395\n            },\n            __self: this\n          }));\n        },\n        aggregate: ['sum', 'uniqueCount'],\n        Aggregated: function Aggregated(_ref7) {\n          var value = _ref7.cell.value;\n          return \"\".concat(value, \" \\u0443\\u043D\\u0438\\u043A\\u0430\\u043B\\u044C\\u043D\\u044B\\u0445\");\n        },\n        disableGroupBy: true\n      }, {\n        Header: 'Логин',\n        accessor: 'username',\n        Cell: function Cell(_ref8) {\n          var _ref8$cell = _ref8.cell,\n              row = _ref8$cell.row,\n              original = _ref8$cell.original;\n          return React.createElement(\"div\", {\n            onClick: onUserClick,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 403\n            },\n            __self: this\n          }, React.createElement(Link, {\n            className: \"name\",\n            to: \"/employee/details/\".concat(typeof row.original === 'undefined' ? row.subRows[0].original._id : row.original._id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 403\n            },\n            __self: this\n          }, typeof row.original === 'undefined' ? row.subRows[0].original.username : row.original.username));\n        },\n        disableGroupBy: true\n      }, {\n        Header: 'E-mail',\n        accessor: 'email',\n        filter: 'fuzzyText',\n        aggregate: ['sum', 'uniqueCount'],\n        Aggregated: function Aggregated(_ref9) {\n          var value = _ref9.cell.value;\n          return \"\".concat(value, \" \\u0443\\u043D\\u0438\\u043A\\u0430\\u043B\\u044C\\u043D\\u044B\\u0445\");\n        },\n        disableGroupBy: true\n      }, {\n        Header: 'Должность',\n        accessor: 'position',\n        filter: 'fuzzyText',\n        aggregate: ['sum', 'uniqueCount'],\n        Aggregated: function Aggregated(_ref10) {\n          var value = _ref10.cell.value;\n          return \"\".concat(value, \" \\u0443\\u043D\\u0438\\u043A\\u0430\\u043B\\u044C\\u043D\\u044B\\u0445\");\n        }\n      }]\n    }];\n  }, []);\n  var skipResetRef = React.useRef(false);\n\n  var updateMyData = function updateMyData(rowIndex, columnId, value) {\n    skipResetRef.current = true;\n    setData(function (old) {\n      return old.map(function (row, index) {\n        if (index === rowIndex) {\n          return _objectSpread({}, row, _defineProperty({}, columnId, value));\n        }\n\n        return row;\n      });\n    });\n  };\n\n  React.useEffect(function () {\n    skipResetRef.current = false;\n  }, [data]);\n  return React.createElement(Styles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456\n    },\n    __self: this\n  }, React.createElement(CustomizedDialogs, {\n    content: message,\n    open: open,\n    parentCallback: function parentCallback() {\n      return setOpen(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457\n    },\n    __self: this\n  }), React.createElement(Table, {\n    columns: columns,\n    data: props.users,\n    updateMyData: updateMyData,\n    skipReset: skipResetRef.current,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458\n    },\n    __self: this\n  }));\n}\n\nexport default Tableau;","map":{"version":3,"sources":["/home/alex/react_projects/myCompany/src/components/admin/list/Tableau.js"],"names":["React","Link","styled","useTable","usePagination","useSortBy","useFilters","useGroupBy","useExpanded","useRowSelect","matchSorter","User","CustomizedDialogs","Styles","div","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","length","e","target","value","undefined","fuzzyTextFilterFn","rows","id","keys","row","values","autoRemove","val","Table","columns","data","updateMyData","skipReset","filterTypes","useMemo","fuzzyText","text","filter","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","autoResetPage","autoResetSelectedRows","initialState","pageSize","hooks","flatColumns","push","groupByBoundary","Header","getToggleAllRowsSelectedProps","Cell","getToggleRowSelectedProps","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageIndex","groupBy","expanded","filters","selectedRowIds","map","headerGroup","getHeaderGroupProps","headers","getHeaderProps","canGroupBy","getGroupByToggleProps","isGrouped","getSortByToggleProps","render","isSorted","isSortedDesc","canFilter","getRowProps","cells","cell","getCellProps","getExpandedToggleProps","isExpanded","editable","subRows","isAggregated","isRepeatedValue","margin","Number","width","display","JSON","stringify","filterGreaterThan","IndeterminateCheckbox","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","useEffect","current","Tableau","props","useState","setData","message","setMessage","open","setOpen","callbackFunction","childData","onUserClick","accessor","original","name","_id","aggregate","Aggregated","disableGroupBy","username","skipResetRef","rowIndex","columnId","old","index","users"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom';\n\nimport styled from 'styled-components'\nimport {\n  useTable,\n  usePagination,\n  useSortBy,\n  useFilters,\n  useGroupBy,\n  useExpanded,\n  useRowSelect,\n} from 'react-table'\n\nimport matchSorter from 'match-sorter'\n\nimport User from './User'\nimport CustomizedDialogs from './CustomizedDialogs'\n\nconst Styles = styled.div`\n  padding: 1rem;\n  text-align:center;\n\n\t\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n    margin:0 auto;\n    min-width:93%;\n    text-align:left;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n\n    td {\n      input {\n        font-size: 1rem;\n        padding: 0;\n        margin: 0;\n        border: 0;\n      }\n    }\n  }\n\n  .pagination {\n    padding: 0.5rem;\n    float:left;\n    margin-left:3%;\n    margin-top:3px;\n  }\n`\n/*\nconst EditableCell = ({\n  cell: { value: initialValue },\n  row: { index },\n  column: { id },\n  updateMyData, // This is a custom function that we supplied to our table instance\n  editable,\n}) => {\n const [value, setValue] = React.useState(initialValue)\n\n  const onChange = e => {\n    setValue(e.target.value)\n  }\n\n  const onBlur = () => {\n    updateMyData(index, id, value)\n  }\n\n  React.useEffect(() => {\n    setValue(initialValue)\n  }, [initialValue])\n\n  if (!editable) {\n    return `${initialValue}`\n  }\n  //ash\n  if (value != null) {  return <input value={value} onChange={onChange} onBlur={onBlur} />};\n  if (value == null) {  return <input value=\"\" onChange={onChange} onBlur={onBlur} />};\n  \n}\n*/\n\nfunction DefaultColumnFilter({\n  column: { filterValue, preFilteredRows, setFilter },\n}) {\n  const count = preFilteredRows.length\n\n  return (\n    <input\n      value={filterValue || ''}\n      onChange={e => {\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\n      }}\n      placeholder={`Поиск по ${count} запис...`}\n    />\n  )\n}\n\n\n\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\n  return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\n}\n\n\nfuzzyTextFilterFn.autoRemove = val => !val\n\n\nfunction Table({ columns, data, updateMyData, skipReset }) {\n  const filterTypes = React.useMemo(\n    () => ({\n\n      fuzzyText: fuzzyTextFilterFn,\n\n      text: (rows, id, filterValue) => {\n        return rows.filter(row => {\n          const rowValue = row.values[id]\n          return rowValue !== undefined\n            ? String(rowValue)\n                .toLowerCase()\n                .startsWith(String(filterValue).toLowerCase())\n            : true\n        })\n      },\n    }),\n    []\n  )\n\n  const defaultColumn = React.useMemo(\n    () => ({\n      Filter: DefaultColumnFilter,\n //     Cell: EditableCell,\n    }),\n    []\n  )\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page, // Instead of using 'rows', we'll use page,\n    // which has only the rows for the active page\n\n    // The rest of these things are super handy, too ;)\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: { pageIndex, pageSize, groupBy, expanded, filters, selectedRowIds },\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn,\n      filterTypes,\n      updateMyData,\n      autoResetPage: !skipReset,\n      autoResetSelectedRows: !skipReset,\n      initialState: { pageSize:20 },\n    },\n    useFilters,\n    useGroupBy,\n    useSortBy,\n    useExpanded,\n    usePagination,\n    useRowSelect,\n\n    hooks => {\n      hooks.flatColumns.push(columns => {\n        return [\n          {\n            id: 'selection',\n           groupByBoundary: true,\n            Header: ({ getToggleAllRowsSelectedProps }) => (\n              <div>\n                <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\n              </div>\n            ),\n            Cell: ({ row }) => (\n              <div>\n                <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n              </div>\n            ),\n          },\n          ...columns,\n        ]\n      })\n    }\n  )\n\n  return (\n    <>\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>\n                  <div>\n                    {column.canGroupBy ? (\n                      // If the column can be grouped, let's add a toggle\n                      <span {...column.getGroupByToggleProps()}>\n                        {column.isGrouped ? '🛑 ' : '👊 '}\n                      </span>\n                    ) : null}\n                    <span {...column.getSortByToggleProps()}>\n                      {column.render('Header')}\n                      {/* Add a sort direction indicator */}\n                      {column.isSorted\n                        ? column.isSortedDesc\n                          ? ' 🔽'\n                          : ' 🔼'\n                        : ''}\n                    </span>\n                  </div>\n                  {/* Render the columns filter UI */}\n                  <div>{column.canFilter ? column.render('Filter') : null}</div>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map(row => {\n            prepareRow(row);//console.log(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return (\n                    <td {...cell.getCellProps()}>\n                      {cell.isGrouped ? (\n                        // If it's a grouped cell, add an expander and row count\n                        <>\n                          <span {...row.getExpandedToggleProps()}>\n                            {row.isExpanded ? '👇' : '👉'}\n                          </span>{' '}\n                          {cell.render('Cell', { editable: false })} (\n                          {row.subRows.length})\n                        </>\n                      ) : cell.isAggregated ? (\n                        // If the cell is aggregated, use the Aggregated\n                        // renderer for cell\n                        cell.render('Aggregated')\n                      ) : cell.isRepeatedValue ? null : ( // For cells with repeated values, render null\n                        // Otherwise, just render the regular cell\n                        cell.render('Cell', { editable: true })\n                      )}\n                    </td>\n                  )\n                })}\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n      { }\n      <div className=\"pagination\">\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n          {'<<'}\n        </button>{' '}\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n          {'<'}\n        </button>{' '}\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\n          {'>'}\n        </button>{' '}\n        <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n          {'>>'}\n        </button>{' '}\n        <span style={{margin:'5px'}}> страница{' '}<strong>{pageIndex + 1} из {pageOptions.length}</strong>{' '} </span>\n        <span style={{margin:'5px'}}> | перейти на:{' '}\n          <input\n            type=\"number\"\n            defaultValue={pageIndex + 1}\n            onChange={e => {\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\n              gotoPage(page)\n            }}\n            style={{ width: '100px' }}\n          />\n        </span>{' '}\n        <select\n          value={pageSize}\n          onChange={e => {\n            setPageSize(Number(e.target.value))\n          }}\n        >\n          {[10, 20, 30, 40, 50].map(pageSize => (\n            <option key={pageSize} value={pageSize}>\n              {pageSize}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div style={{display:'none'}}>\n      <pre>\n        <code>\n          {JSON.stringify(\n            {\n              pageIndex,\n              pageSize,\n              pageCount,\n              canNextPage,\n              canPreviousPage,\n              groupBy,\n              expanded: expanded,\n              filters,\n              selectedRowIds: selectedRowIds,\n            },\n            null,\n            2\n          )}\n        </code>\n      </pre>\n      </div>\n    </>\n  )\n}\n\nfunction filterGreaterThan(rows, id, filterValue) {\n  return rows.filter(row => {\n    const rowValue = row.values[id]\n    return rowValue >= filterValue\n  })\n}\n\nfilterGreaterThan.autoRemove = val => typeof val !== 'number'\n\n\nconst IndeterminateCheckbox = React.forwardRef(\n  ({ indeterminate, ...rest }, ref) => {\n    const defaultRef = React.useRef()\n    const resolvedRef = ref || defaultRef\n\n    React.useEffect(() => {\n      resolvedRef.current.indeterminate = indeterminate\n    }, [resolvedRef, indeterminate])\n\n    return (\n      <>\n        <input type=\"checkbox\" ref={resolvedRef} {...rest} />\n      </>\n    )\n  }\n)\n\nfunction Tableau(props) {\n\n  const [data, setData] = React.useState([]);\n  const [message, setMessage] = React.useState('...Loading...');\n  const [open, setOpen] = React.useState(false);\n  \n  const callbackFunction = (childData) => {\n    setMessage(childData);\n  }\n  \n  const onUserClick = () => {\n     setMessage('');\n     setOpen(true);\n\n  } \n    \n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'Список работников',\n        columns: [\n\n          {\n            Header: 'Ф.И.О',\n            accessor: 'name',\n\t   Cell: ({ cell: { row, original } }) => <div onClick={onUserClick}><User username={typeof row.original === 'undefined' ? row.subRows[0].original.name : row.original.name} id={typeof row.original === 'undefined' ? row.subRows[0].original._id : row.original._id} parentCallback={callbackFunction} /></div>,\n           aggregate: ['sum', 'uniqueCount'],\n            Aggregated: ({ cell: { value } }) => `${value} уникальных`,\n\t    disableGroupBy: true\n          },   \n          {\n            Header: 'Логин',\n\t    accessor: 'username',\n\t   Cell: ({ cell: { row, original } }) => <div onClick={onUserClick}><Link className='name' to={`/employee/details/${typeof row.original === 'undefined' ? row.subRows[0].original._id : row.original._id}`}>{typeof row.original === 'undefined' ? row.subRows[0].original.username : row.original.username}</Link></div>,\n           disableGroupBy: true\n\t  },       \n\t  {\n            Header: 'E-mail',\n            accessor: 'email',\n\n            filter: 'fuzzyText',\n\n           aggregate: ['sum', 'uniqueCount'],\n            Aggregated: ({ cell: { value } }) => `${value} уникальных`,\n\t    disableGroupBy: true\n          },\n\t  {\n            Header: 'Должность',\n            accessor: 'position',\n\n            filter: 'fuzzyText',\n\n           aggregate: ['sum', 'uniqueCount'],\n            Aggregated: ({ cell: { value } }) => `${value} уникальных`,\n\n\n          },\n        ],\n      },\n    ],\n    []\n  )\n\n  const skipResetRef = React.useRef(false)\n\n  const updateMyData = (rowIndex, columnId, value) => {\n\n    skipResetRef.current = true\n    setData(old =>\n      old.map((row, index) => {\n        if (index === rowIndex) {\n          return {\n            ...row,\n            [columnId]: value,\n          }\n        }\n        return row\n      })\n    )\n  }\n\n  React.useEffect(() => {\n    skipResetRef.current = false\n  }, [data])\n\n  return (\n    <Styles>\n     <CustomizedDialogs content={message} open={open} parentCallback={() => setOpen(false)}/>    \n     <Table\n        columns={columns}\n        data={props.users}\n        updateMyData={updateMyData}\n        skipReset={skipResetRef.current}\n      />\n    </Styles>\n  )\n}\n\n\nexport default Tableau\n"]},"metadata":{},"sourceType":"module"}