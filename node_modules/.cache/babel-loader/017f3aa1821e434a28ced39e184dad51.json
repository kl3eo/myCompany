{"ast":null,"code":"import _classCallCheck from \"/home/alex/react_projects/myCompany/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/alex/react_projects/myCompany/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/alex/react_projects/myCompany/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/alex/react_projects/myCompany/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/alex/react_projects/myCompany/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/alex/react_projects/myCompany/src/components/authentications/login/loginComponent.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom'; //import { setCookie } from '../../../utils/cookies';\n\nimport { loginUserAction } from '../../../actions/authenticationActions';\nimport LoginView from './loginView';\n\nvar LoginComponent = /*#__PURE__*/function (_Component) {\n  _inherits(LoginComponent, _Component);\n\n  function LoginComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isSuccess: false,\n      message: ''\n    };\n\n    _this.onHandleLogin = function (event) {\n      event.preventDefault();\n      var username = event.target.username.value;\n      var password = event.target.password.value;\n      var data = {\n        username: username,\n        password: password\n      };\n\n      _this.props.dispatch(loginUserAction(data));\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.title = 'Моя компания';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var user = JSON.parse(localStorage.getItem('user'));\n\n      if (this.state.isSuccess) {\n        return user.role === 'Admin' ? React.createElement(Redirect, {\n          to: \"/admin/list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }) : React.createElement(Redirect, {\n          to: \"/admin/dashboard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(LoginView, {\n        handleLogin: this.onHandleLogin,\n        success: this.state.isSuccess,\n        message: this.state.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.response.login.hasOwnProperty('response')) {\n        if (nextProps.response.login.response.success !== prevState.isSuccess) {\n          var user = JSON.parse(localStorage.getItem('user'));\n\n          if (user) {\n            localStorage.removeItem('user');\n            return {\n              isSuccess: false,\n              message: ''\n            };\n          } else {\n            localStorage.setItem('user', JSON.stringify(nextProps.response.login.response));\n            return {\n              isSuccess: nextProps.response.login.response.success,\n              message: nextProps.response.login.response.message\n            };\n          }\n        } else {\n          return {\n            isSuccess: nextProps.response.login.response.success,\n            message: nextProps.response.login.response.message\n          };\n        }\n      } else {\n        localStorage.removeItem('user');\n        return null;\n      }\n    }\n  }]);\n\n  return LoginComponent;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(response) {\n  return {\n    response: response\n  };\n};\n\nexport default connect(mapStateToProps)(LoginComponent);","map":{"version":3,"sources":["/home/alex/react_projects/myCompany/src/components/authentications/login/loginComponent.js"],"names":["React","Component","connect","Redirect","loginUserAction","LoginView","LoginComponent","state","isSuccess","message","onHandleLogin","event","preventDefault","username","target","value","password","data","props","dispatch","document","title","user","JSON","parse","localStorage","getItem","role","nextProps","prevState","response","login","hasOwnProperty","success","removeItem","setItem","stringify","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\n//import { setCookie } from '../../../utils/cookies';\nimport { loginUserAction } from '../../../actions/authenticationActions';\nimport LoginView from './loginView';\n\n\nclass LoginComponent extends Component {\n  state = {\n    isSuccess: false,\n    message: ''\n  };\n\n  componentDidMount(){\n    document.title = 'Моя компания';\n  }\n\n  onHandleLogin = (event) => {\n    event.preventDefault();\n\n    let username = event.target.username.value;\n    let password = event.target.password.value;\n\n    const data = {\n      username, password\n    };\n\n    this.props.dispatch(loginUserAction(data));\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n\n    if (nextProps.response.login.hasOwnProperty('response')) {\n\n      if ( nextProps.response.login.response.success !== prevState.isSuccess ) {\n\t\n\tlet user = JSON.parse(localStorage.getItem('user'));\n\tif (user) {\n\n\t\tlocalStorage.removeItem('user');\n\t\treturn {\n          \t\tisSuccess: false,\n          \t\tmessage: ''\n        \t};\n\t\t\n\t} else {\n\t\t\n\t\tlocalStorage.setItem('user', JSON.stringify(nextProps.response.login.response));\n        \treturn {\n          \t\tisSuccess: nextProps.response.login.response.success,\n          \t\tmessage: nextProps.response.login.response.message\n        \t};\n\t}\n      } else {\n\n        return {\n          isSuccess: nextProps.response.login.response.success,\n          message: nextProps.response.login.response.message\n        };\n      }\n    } else {\n\n\tlocalStorage.removeItem('user');\n     return null;\n    }\n  }\n\n  render() {\n    \n    let user = JSON.parse(localStorage.getItem('user'));\n\n    if (this.state.isSuccess) {\n      return (user.role === 'Admin') ? <Redirect to='/admin/list' /> : <Redirect to='/admin/dashboard' />;\n    }\n\n    return (\n      <LoginView\n        handleLogin={this.onHandleLogin}\n        success={this.state.isSuccess}\n        message={this.state.message} />\n    );\n  }\n}\n\nconst mapStateToProps = (response) => ({response});\n\nexport default connect(mapStateToProps)(LoginComponent);\n"]},"metadata":{},"sourceType":"module"}